upstream plagiarism {
    server localhost:5000;
}

upstream docs {
    server localhost:8080;
}

upstream tiles {
    server localhost:8081;
}

upstream nextcloud {
    server localhost:8082;
}

upstream brouter-web {
    server localhost:8083;
}

upstream brouter {
    server localhost:17776;
}

server {

    server_name www.keidel.me;
    root /var/www/html;


    listen [::]:443 ssl ipv6only=on; # managed by Certbot
    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/www.keidel.me/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/www.keidel.me/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}

server {

    listen 80;

    server_name plagiarism.keidel.me;
    root /home/app/web/static/keidel-me/;

    client_max_body_size 128M;

    location / {
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_redirect off;
        proxy_pass http://plagiarism/;
    }

}

server {

    listen 80;

    server_name gravel-tiles.cxberlin.com;
    root /home/app/web/static/keidel-me/;

    location / {
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_redirect off;
        proxy_pass http://tiles/;
    }

}

server {

    server_name docs.keidel.me;
    root /home/app/web/static/keidel-me/;

    client_max_body_size 1024M;

    location / {
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_redirect off;
        proxy_pass http://docs/;
    }


    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/docs.keidel.me/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/docs.keidel.me/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}

server {

    server_name nc.keidel.me;
    root /home/app/web/static/keidel-me/;

    location / {
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_redirect off;
        proxy_pass http://nextcloud/;
    }


    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/nc.keidel.me/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/nc.keidel.me/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}


server {

    listen 17777;

    server_name brouter.cxberlin.com;
    root /home/app/web/static/keidel-me/;

    location / {
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_redirect off;
        proxy_pass http://brouter/;
    }

}

server {

    listen 80;

    server_name routing.cxberlin.com;
    root /home/app/web/static/keidel-me/;

    location / {
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_redirect off;
        proxy_pass http://brouter-web/;
    }

}

server {
    if ($host = www.keidel.me) {
        return 301 https://$host$request_uri;
    } # managed by Certbot



    listen 80;
    listen [::]:80;

    server_name www.keidel.me;
    return 404; # managed by Certbot


}


server {
    if ($host = keidel.me) {
        return 301 https://www.$host$request_uri;
    } # managed by Certbot



    listen 80;
    listen [::]:80;

    server_name keidel.me;
    return 404; # managed by Certbot


}


server {
    if ($host = docs.keidel.me) {
        return 301 https://$host$request_uri;
    } # managed by Certbot



    listen 80;

    server_name docs.keidel.me;
    return 404; # managed by Certbot


}


server {
    if ($host = nc.keidel.me) {
        return 301 https://$host$request_uri;
    } # managed by Certbot



    listen 80;

    server_name nc.keidel.me;
    return 404; # managed by Certbot


}
